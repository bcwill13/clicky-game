{"version":3,"sources":["components/cards/cards.js","components/container/container.js","App.js","index.js"],"names":["cards","props","onClick","setClicked","id","className","alt","name","src","image","Container","children","correctGuesses","bestScore","clickMessage","App","state","clickedMatch","filter","match","clicked","console","log","i","length","setState","sort","a","b","Math","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"intHAWeA,G,MARD,SAAAC,GAAK,OACjB,yBAAKC,QAAS,kBAAMD,EAAME,WAAWF,EAAMG,KAAKC,UAAU,iBACxD,yBAAKA,UAAU,iBACb,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCDxBC,G,MAFG,SAAAT,GAAK,OAAI,yBAAKI,UAAU,aAAaJ,EAAMU,Y,OCGzDC,G,MAAiB,GACjBC,EAAY,EACZC,EACF,gGAkGaC,E,2MA/FbC,MAAQ,CACNhB,QACAY,iBACAC,YACAC,gB,EAGFX,WAAa,SAAAC,GACX,IAAMJ,EAAQ,EAAKgB,MAAMhB,MAEnBiB,EAAejB,EAAMkB,QAAO,SAAAC,GAAK,OAAIA,EAAMf,KAAOA,KAExD,GAAIa,EAAa,GAAGG,QAAS,CAC3BC,QAAQC,IAAI,oBAAsBV,GAClCS,QAAQC,IAAI,eAAiBT,GAE7BD,EAAiB,EACjBE,EAAe,mCAEf,IAAK,IAAIS,EAAI,EAAGA,EAAIvB,EAAMwB,OAAQD,IAChCvB,EAAMuB,GAAGH,SAAU,EAGrB,EAAKK,SAAS,CAAEX,iBAChB,EAAKW,SAAS,CAAEb,mBAChB,EAAKa,SAAS,CAAEzB,eACX,GAAIY,EAAiB,GAC1BK,EAAa,GAAGG,SAAU,EAI1BN,EAAe,mDAFfF,EAIqBC,IACnBA,EAAYD,EACZ,EAAKa,SAAS,CAAEZ,eAGlBb,EAAM0B,MAAK,SAASC,EAAGC,GACrB,MAAO,GAAMC,KAAKC,YAGpB,EAAKL,SAAS,CAAEzB,UAChB,EAAKyB,SAAS,CAAEb,mBAChB,EAAKa,SAAS,CAAEX,qBACX,CACLG,EAAa,GAAGG,SAAU,EAE1BR,EAAiB,EAEjBE,EAAe,kDACfD,EAAY,GACZ,EAAKY,SAAS,CAAEZ,cAEhB,IAAK,IAAIU,EAAI,EAAGA,EAAIvB,EAAMwB,OAAQD,IAChCvB,EAAMuB,GAAGH,SAAU,EAGrBpB,EAAM0B,MAAK,SAASC,EAAGC,GACrB,MAAO,GAAMC,KAAKC,YAGpB,EAAKL,SAAS,CAAEzB,UAChB,EAAKyB,SAAS,CAAEb,mBAChB,EAAKa,SAAS,CAAEX,mB,wEAIV,IAAD,OACP,OACE,kBAAC,EAAD,KACE,wBAAIT,UAAU,gBAAgB0B,KAAKf,MAAMF,cAEzC,wBAAIT,UAAU,4BAAd,oBACoB0B,KAAKf,MAAMJ,eAC7B,6BAFF,eAGemB,KAAKf,MAAMH,WAE1B,yBAAKR,UAAU,aACb,yBAAKA,UAAU,OACZ0B,KAAKf,MAAMhB,MAAMgC,KAAI,SAAAb,GAAK,OACzB,kBAAC,EAAD,CACEhB,WAAY,EAAKA,WACjBC,GAAIe,EAAMf,GACV6B,IAAKd,EAAMf,GACXK,MAAOU,EAAMV,kB,GAtFXyB,aCNlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5d0debd9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./cards.css\";\n\nconst cards = props => (\n  <div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default cards;\n","import React from \"react\";\nimport \"./container.css\";\n\nconst Container = props => <div className=\"container\">{props.children}</div>;\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport Cards from \"./components/cards\";\nimport Container from \"./components/container\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage =\n  \"Memory Game: Click on the PokÃ©mon to earn points, don't click the same one more than once!\";\n\nclass App extends Component {\n  state = {\n    cards,\n    correctGuesses,\n    bestScore,\n    clickMessage\n  };\n\n  setClicked = id => {\n    const cards = this.state.cards;\n\n    const clickedMatch = cards.filter(match => match.id === id);\n\n    if (clickedMatch[0].clicked) {\n      console.log(\"Correct Guesses: \" + correctGuesses);\n      console.log(\"Best Score: \" + bestScore);\n\n      correctGuesses = 0;\n      clickMessage = \"You already clicked on this one.\";\n\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].clicked = false;\n      }\n\n      this.setState({ clickMessage });\n      this.setState({ correctGuesses });\n      this.setState({ cards });\n    } else if (correctGuesses < 11) {\n      clickedMatch[0].clicked = true;\n\n      correctGuesses++;\n\n      clickMessage = \"You haven't click on that one yet! Keep going!\";\n\n      if (correctGuesses > bestScore) {\n        bestScore = correctGuesses;\n        this.setState({ bestScore });\n      }\n\n      cards.sort(function(a, b) {\n        return 0.5 - Math.random();\n      });\n\n      this.setState({ cards });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    } else {\n      clickedMatch[0].clicked = true;\n\n      correctGuesses = 0;\n\n      clickMessage = \"You won! Now, let's see if you can do it again!\";\n      bestScore = 12;\n      this.setState({ bestScore });\n\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].clicked = false;\n      }\n\n      cards.sort(function(a, b) {\n        return 0.5 - Math.random();\n      });\n\n      this.setState({ cards });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <h3 className=\"scoreSummary\">{this.state.clickMessage}</h3>\n\n        <h3 className=\"scoreSummary card-header\">\n          Correct Guesses: {this.state.correctGuesses}\n          <br />\n          Best Score: {this.state.bestScore}\n        </h3>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.cards.map(match => (\n              <Cards\n                setClicked={this.setClicked}\n                id={match.id}\n                key={match.id}\n                image={match.image}\n              />\n            ))}\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}